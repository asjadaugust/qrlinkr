services:
  backend:
    image: qrlinkr-backend:latest
    container_name: qrlinkr-backend-prod
    restart: unless-stopped
    networks:
      - qrlinkr-net
    ports:
      - '3001:3001' # Expose backend API on port 3001
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3001
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_HOST=http://backend:3001
    container_name: qrlinkr-frontend-prod
    restart: unless-stopped
    networks:
      - qrlinkr-net
    ports:
      - '3000:3000' # Expose frontend on port 3000
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${API_BASE_URL}
      - NEXT_PUBLIC_BACKEND_HOST=http://backend:3001  # Set backend host for proxy
    depends_on:
      - backend

  db:
    image: postgres:15
    container_name: qrlinkr-db-prod
    restart: unless-stopped
    networks:
      - qrlinkr-net
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  qrlinkr-net:
    driver: bridge

volumes:
  postgres_data:
