name: QRLinkr CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        # Ignore the 'prepare' script which runs 'husky' and is not needed in CI
        run: npm install --workspaces --ignore-scripts

      - name: Build applications
        run: npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            frontend/.next/
            frontend/public/
            frontend/package.json
            frontend/next.config.mjs

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: |
            backend/dist/
            backend/package.json
            backend/prisma/

  deploy-frontend:
    name: Deploy Frontend
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: .

      - name: Deploy to Vercel (Placeholder)
        run: |
          echo "This is a placeholder for your Vercel deployment."
          echo "You would typically install the Vercel CLI and run the deploy command."
          # Example:
          # npm install -g vercel
          # vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --scope=<your-scope>
          echo "Please configure your Vercel deployment secrets and command."

  deploy-backend:
    name: Deploy Backend
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/

      - name: Install production dependencies
        working-directory: ./backend
        run: npm install --omit=dev

      - name: Run Prisma migrations
        working-directory: ./backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}
        run: npx prisma migrate deploy

      - name: Deploy to Production (Placeholder)
        run: |
          echo "This is a placeholder for your backend deployment."
          echo "The backend is built, dependencies are installed, and migrations are run."
          echo "You would now typically start the server or push to your hosting provider."
          # Example: start the server in the background
          # working-directory: ./backend
          # pm2 start dist/index.js
          echo "Please configure your backend deployment steps."
